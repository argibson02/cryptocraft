{"version":3,"sources":["components/listItems.js","components/Title.js","components/Chart.js","components/InfoTab.js","utils/auth.js","components/CryptoGrid.js","utils/timeHelpers.js","components/PortfolioGraph.js","utils/graphData.js","components/PortfolioGraphContainer.js","pages/Dashboard.js","pages/Error.js","utils/mutations.js","pages/Signup.js","pages/Login.js","App.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","undefined","preventDefault","event","InfoTab","sx","flex","Date","toDateString","Link","href","onClick","decode","this","getToken","token","isTokenExpired","exp","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","columns","id","label","minWidth","align","name","ticker","price","rows","CryptoGrid","React","page","setPage","rowsPerPage","setRowsPerPage","Paper","width","overflow","TableContainer","maxHeight","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","style","TableBody","slice","row","hover","role","tabIndex","code","value","format","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","target","mt","hourTimeInterval","graphDataPoints","intervalLabels","timeStart","moment","i","unixT","timePoint","push","reverse","IndividualGraph","graph","data","console","log","tempLabels","className","datasetIdKey","labels","datasets","fill","borderColor","tension","pointStyle","options","radius","responsive","aspectRatio","maintainAspectRatio","title","display","plugins","legend","font","size","interaction","intersect","graphData","GraphContainer","Copyright","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","mdTheme","createTheme","DashboardContent","setOpen","toggleDrawer","ThemeProvider","Box","CssBaseline","Toolbar","pr","IconButton","edge","marginRight","noWrap","flexGrow","Auth","logout","Badge","alignItems","justifyContent","px","Divider","List","backgroundColor","palette","mode","grey","height","Container","maxWidth","mb","Grid","container","item","xs","md","lg","p","flexDirection","pt","Dashboard","Error","src","alt","border","LOGIN_USER","gql","ADD_USER","SignUp","useState","username","firstName","lastName","password","formState","setFormState","useMutation","addUser","error","handleChange","handleSubmit","a","variables","login","marginTop","Avatar","m","bgcolor","noValidate","onSubmit","sm","TextField","required","fullWidth","autoFocus","onChange","type","Button","borderRadius","textAlign","LogIn","margin","message","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","redirect","pathname","to","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa6fcfb3.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport LayersIcon from '@mui/icons-material/Layers';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        {/* <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Orders\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n        </ListItem> */}\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Leaderboard\" />\r\n        </ListItem>\r\n        {/* <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem> */}\r\n    </div>\r\n);\r\n\r\n// map portfolios here\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Portfolios</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Portfolio 1\" />\r\n        </ListItem>\r\n        {/* <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem> */}\r\n    </div>\r\n);","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Title(props) {\r\n    return (\r\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTitle.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Title;","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n    return { time, amount };\r\n}\r\n\r\nconst data = [\r\n    createData('00:00', 0),\r\n    createData('03:00', 300),\r\n    createData('06:00', 600),\r\n    createData('09:00', 800),\r\n    createData('12:00', 1500),\r\n    createData('15:00', 2000),\r\n    createData('18:00', 2400),\r\n    createData('21:00', 2400),\r\n    createData('24:00', undefined),\r\n];\r\n\r\nexport default function Chart() {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Today</Title>\r\n            <ResponsiveContainer>\r\n                <LineChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 16,\r\n                        right: 16,\r\n                        bottom: 0,\r\n                        left: 24,\r\n                    }}\r\n                >\r\n                    <XAxis\r\n                        dataKey=\"time\"\r\n                        stroke={theme.palette.text.secondary}\r\n                        style={theme.typography.body2}\r\n                    />\r\n                    <YAxis\r\n                        stroke={theme.palette.text.secondary}\r\n                        style={theme.typography.body2}\r\n                    >\r\n                        <Label\r\n                            angle={270}\r\n                            position=\"left\"\r\n                            style={{\r\n                                textAnchor: 'middle',\r\n                                fill: theme.palette.text.primary,\r\n                                ...theme.typography.body1,\r\n                            }}\r\n                        >\r\n                            Sales ($)\r\n                        </Label>\r\n                    </YAxis>\r\n                    <Line\r\n                        isAnimationActive={false}\r\n                        type=\"monotone\"\r\n                        dataKey=\"amount\"\r\n                        stroke={theme.palette.primary.main}\r\n                        dot={false}\r\n                    />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport Title from './Title';\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nexport default function InfoTab() {\r\n    // get our user data here or maybe portfolio\r\n    return (\r\n        <React.Fragment>\r\n            <Title>My Portfolios</Title>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n                Add more crypto data here\r\n                for portfolio this would be a pie chart\r\n            </Typography>\r\n            {/* add a chart pie chart hereinstead of the value */}\r\n            <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\r\n                on {new Date().toDateString()}\r\n            </Typography>\r\n            <div>\r\n                <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n                    View More Data (in portfolios this would portfolio allocation)\r\n                </Link>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import * as React from 'react';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport Title from './Title';\r\nimport Link from '@mui/material/Link';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'ticker', label: 'Ticker', minWidth: 100 },\r\n    { id: 'price', label: 'Price\\u00a0(USD)', minWidth: 170, align: 'right' },\r\n];\r\n\r\nfunction createData(name, ticker, price) {\r\n    return { name, ticker, price };\r\n}\r\n\r\nconst rows = [\r\n    createData('Bitcoin', 'BTC', 44000),\r\n    // query data here\r\n];\r\n\r\nexport default function CryptoGrid() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Browse Cryptos</Title>\r\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                <TableContainer sx={{ maxHeight: 440 }}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row) => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                            {columns.map((column) => {\r\n                                                const value = row[column.id];\r\n                                                return (\r\n                                                    <TableCell key={column.id} align={column.align}>\r\n                                                        {column.format && typeof value === 'number'\r\n                                                            ? column.format(value)\r\n                                                            : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <Link color=\"primary\" target=\"_blank\" href=\"https://coinmarketcap.com/\" sx={{ mt: 3 }}>\r\n                See more Cryptos\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n}","import moment from 'moment';\r\n\r\nexport function hourTimeInterval(graphDataPoints) {\r\n    var intervalLabels = [];\r\n    let timeStart = moment();\r\n    for (var i = 0; i < graphDataPoints.length; i++) {\r\n        let unixT = (timeStart - (i * 3600000)); // time is milliseconds, thus, 3 digits are added on the end of each unix integer.\r\n        let timePoint = moment(unixT).format(\"M-D-YYYY, HH:00\");\r\n        intervalLabels.push(timePoint);\r\n    }\r\n    return intervalLabels.reverse();\r\n}\r\n\r\nexport function sixHourTimeInterval(graphDataPoints) {\r\n    var intervalLabels = [];\r\n    let timeStart = moment();\r\n    for (var i = 0; i < graphDataPoints.length; i++) {\r\n        let unixT = (timeStart - (i * 21600000)); // time is milliseconds, thus, 3 digits are added on the end of each unix integer.\r\n        let timePoint = moment(unixT).format(\"MMM-DD-YYYY, HH:00:00\");\r\n        intervalLabels.push(timePoint);\r\n    }\r\n    return intervalLabels.reverse();\r\n}\r\n\r\nexport function dayTimeInterval(history) {\r\n    var intervalLabels = [];\r\n    let timeStart = moment();\r\n    for (var i = 0; i < history.length; i++) {\r\n        let unixT = (timeStart - (i * 86400000)); // time is milliseconds, thus, 3 digits are added on the end of each unix integer.\r\n        let timePoint = moment(unixT).format(\"M-D-YYYY\");\r\n        intervalLabels.push(timePoint);\r\n    }\r\n    return intervalLabels.reverse();\r\n}","import React, { useDebugValue, useEffect } from 'react';\r\nimport '../styles/Graph.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport { hourTimeInterval, sixHourTimeInterval } from '../utils/timeHelpers'\r\n\r\nexport default function IndividualGraph(props) {\r\n    let graphDataPoints = (props.graph.data);\r\n    let portfolioName = \"YOLO Portfolio\"\r\n    console.log(hourTimeInterval(graphDataPoints));\r\n    let tempLabels = hourTimeInterval(graphDataPoints);\r\n\r\n\r\n    return (\r\n        <div className=\"graph-card\" >\r\n            <Line\r\n                datasetIdKey='id'\r\n                data={{\r\n                    labels: tempLabels,\r\n                    datasets: [{\r\n                        labels: portfolioName,\r\n                        data: (props.graph.data),\r\n                        fill: false,\r\n                        // xAxisID: 'Time',\r\n                        // yAxisID: 'USD Price',\r\n                        borderColor: 'rgb(175, 92, 192)',\r\n                        tension: 0.1,\r\n                        pointStyle: false,\r\n                    }],\r\n                }}\r\n                options={{\r\n                    radius: 0,\r\n                    responsive: true,\r\n                    aspectRatio: 2,\r\n                    maintainAspectRatio: true,\r\n                    title: {\r\n                        display: true,\r\n                    },\r\n                    plugins: {\r\n                        legend: {\r\n                            labels: {\r\n                                // This more specific font property overrides the global property\r\n                                font: {\r\n                                    size: 10\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    interaction: {\r\n                        intersect: false,\r\n                        // mode: 'index',\r\n                    },\r\n                }}\r\n            />\r\n            {/* <div className=\"card-text\">description</div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// https://react-chartjs-2.netlify.app/docs/working-with-datasets\r\n// https://www.chartjs.org/docs/latest/charts/line.html\r\n","export var graphData = [\r\n    {\r\n        id: 1,\r\n        data: [\r\n            53838.7, 53494.99, 53638.72,\r\n            53431.06, 53638.04, 53064.65,\r\n            53010.37, 53136.36, 52038.14,\r\n            50357.07, 47846.62, 47711.33,\r\n            47347.82, 47597.01, 47574.5,\r\n            47481.47, 46588.66, 47172.78,\r\n            47476.7, 48014.55, 48279.87,\r\n            47910.93, 48321.62, 48467.97\r\n        ],\r\n        // last_day\r\n    },\r\n\r\n]\r\n\r\nexport var graphData2 = [\r\n    {\r\n        id: 2,\r\n        data: [\r\n            58741.88, 58671.21, 57232.6,\r\n            56280.81, 56138.99, 57566.85,\r\n            56633.53, 57162.66, 58052.86,\r\n            58987.27, 53751.39, 53757.67,\r\n            54638.94, 54759.05, 54534.9,\r\n            57317.17, 56944.78, 57838.06,\r\n            57666.89, 56987.97, 57194.41,\r\n            57226.5, 56351.04, 56521.46,\r\n            56138.99, 57162.66, 53751.39,\r\n            54759.05,\r\n        ]\r\n        // last_week\r\n    }]","import React, { useEffect } from 'react';\r\n// import './GraphContainer.css';\r\nimport IndividualGraph from './PortfolioGraph.js';\r\nimport { graphData } from '../utils/graphData';\r\n// const graphData = require('../../../server/utils/graphData');\r\n\r\n\r\nconst GraphContainer = () => {\r\n    // useEffect(() => {\r\n    //     console.log(graphData);\r\n    //     console.log(\"^ GC\");\r\n    //     // need current portfolio selector code here\r\n    // });\r\n\r\n    return (\r\n        <div className=\"dashboard-graph-container\">\r\n            {graphData.map((graph) => (\r\n                <IndividualGraph key={graph.id} graph={graph} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GraphContainer;","import * as React from 'react';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { mainListItems, secondaryListItems } from '../components/listItems';\r\nimport Chart from '../components/Chart';\r\nimport InfoTab from '../components/InfoTab';\r\n// import Browse from '../components/BrowseCryptos';\r\nimport '../styles/dashboard.css';\r\nimport Auth from '../utils/auth';\r\nimport CryptoGrid from '../components/CryptoGrid';\r\n// VVVV Testing Graphs\r\nimport GraphContainer from '../components/PortfolioGraphContainer'; // Delete later\r\n\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n\r\n            <Link color=\"inherit\" target = \"_blank\" href=\"https://github.com/gulpinhenry/cryptocraft\">\r\n                cryptocraft\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n        '& .MuiDrawer-paper': {\r\n            position: 'relative',\r\n            whiteSpace: 'nowrap',\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            boxSizing: 'border-box',\r\n            ...(!open && {\r\n                overflowX: 'hidden',\r\n                transition: theme.transitions.create('width', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n                width: theme.spacing(7),\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: theme.spacing(9),\r\n                },\r\n            }),\r\n        },\r\n    }),\r\n);\r\n\r\nconst mdTheme = createTheme();\r\n\r\nfunction DashboardContent() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggleDrawer = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const logout = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"logout\");\r\n        Auth.logout();\r\n      }\r\n\r\n    return (\r\n        <ThemeProvider theme={mdTheme}>\r\n            <Box sx={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" open={open}>\r\n                    <Toolbar\r\n                        sx={{\r\n                            pr: '24px', // keep right padding when drawer closed\r\n                        }}\r\n                    >\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={toggleDrawer}\r\n                            sx={{\r\n                                marginRight: '36px',\r\n                                ...(open && { display: 'none' }),\r\n                            }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h6\"\r\n                            color=\"inherit\"\r\n                            noWrap\r\n                            sx={{ flexGrow: 1 }}\r\n                        >\r\n                            Dashboard\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\" onClick={logout}>\r\n                            <Badge color=\"secondary\">\r\n                                <LogoutIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer variant=\"permanent\" open={open}>\r\n                    <Toolbar\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-end',\r\n                            px: [1],\r\n                        }}\r\n                    >\r\n                        <IconButton onClick={toggleDrawer}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    <Divider />\r\n                    <List>{mainListItems}</List>\r\n                    <Divider />\r\n                    <List>{secondaryListItems}</List>\r\n                </Drawer>\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{\r\n                        backgroundColor: (theme) =>\r\n                            theme.palette.mode === 'light'\r\n                                ? theme.palette.grey[100]\r\n                                : theme.palette.grey[900],\r\n                        flexGrow: 1,\r\n                        height: '100vh',\r\n                        overflow: 'auto',\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                        <Grid container spacing={3}>\r\n                            {/* Chart */}\r\n                            <Grid item xs={12} md={8} lg={9}>\r\n                                <Paper\r\n                                    sx={{\r\n                                        p: 2,\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        height: 400,\r\n                                    }}\r\n                                >\r\n                                    {/* delete below after testing */}\r\n                                    <GraphContainer />\r\n                                    {/* the below chart is from rechart */}\r\n                                    {/* <Chart /> */}\r\n                                </Paper>\r\n                            </Grid>\r\n                            {/* Recent Deposits */}\r\n                            <Grid item xs={12} md={4} lg={3}>\r\n                                <Paper\r\n                                    sx={{\r\n                                        p: 2,\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        height: 400,\r\n\r\n                                    }}\r\n                                >\r\n                                    <InfoTab />\r\n                                </Paper>\r\n                            </Grid>\r\n                            {/* Recent Orders */}\r\n                            <Grid item xs={12}>\r\n                                <Paper id = \"dashboard-table-container\" sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                                    <CryptoGrid />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Copyright sx={{ pt: 4 }} />\r\n                    </Container>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default function Dashboard() {\r\n    return <DashboardContent />;\r\n}","import React from 'react';\r\nimport '../styles/error.css';\r\nconst Error = () => {\r\n    return (\r\n        <div id=\"error-container\">\r\n            <img id = \"mc-error\" src=\"https://fontmeme.com/permalink/211204/5d09fcbff63c28a89211008a437fa8c7.png\" alt=\"minecraft-evenings-font\" border=\"0\"></img>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Error;","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($username: String!, $password: String!) {\r\n        login(username: $username, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($username: String!, $firstName: String!, $lastName: String!, $password: String!) {\r\n        addUser(username: $username, firstName: $firstName, lastName: $lastName, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const ADD_PORTFOLIO = gql`\r\n//     mutation addPortfolio($name: String, $usdBalance: Float!) {\r\n//         addPortfolio(name: $name, usdBalance: $usdBalance) {\r\n//             name\r\n//             usdBalance\r\n//         }\r\n//     }\r\n// `;\r\n\r\nexport const ADD_PORTFOLIO = gql`\r\n    mutation addPortfolio($name: String, $usdBalance: Float!) {\r\n        addPortfolio(name: $name, usdBalance: $usdBalance) {\r\n            name\r\n            usdBalance\r\n        }\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n// import React, { useState } from 'react';\r\nimport { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/gulpinhenry/cryptocraft\">\r\n                cryptocraft\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignUp() {\r\n    const [formState, setFormState] = useState({\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        password: ''\r\n    })\r\n\r\n    const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // const data = new FormData(event.currentTarget);\r\n        // // eslint-disable-next-line no-console\r\n        // console.log({\r\n        //     username: data.get('username'),\r\n        //     firstName: data.get('firstName'),\r\n        //     lastName: data.get('lastName'),\r\n        //     password: data.get('password'),\r\n        // });\r\n        console.log(formState);\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...formState }\r\n            })\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\n    const divStyle = {\r\n        backgroundColor: 'rgb(202, 102, 122)',\r\n        borderRadius: '3px',\r\n        color: 'white',\r\n        textAlign: 'center'\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    name=\"firstName\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    value={formState.firstName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    value={formState.lastName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    value={formState.username}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={formState.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/login\" variant=\"body2\">\r\n                                    Already have an account? Log in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {error && (\r\n                            <div className=\"my-3 p-1\" style={divStyle}>\r\n                                {'Try another password; must be at least 8 characters'}\r\n                            </div>\r\n                        )}\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{ mt: 5 }} />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://github.com/gulpinhenry/cryptocraft\">\r\n                cryptocraft\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nconst LogIn = (props) => {\r\n    const [formState, setFormState] = useState({ \r\n        username: '', password: '' \r\n    });\r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // const data = new FormData(event.currentTarget);\r\n        // // eslint-disable-next-line no-console\r\n        // console.log({\r\n        //     email: data.get('email'),\r\n        //     password: data.get('password'),\r\n        // });\r\n        console.log(formState);\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...formState }\r\n            })\r\n\r\n            console.log(data)\r\n\r\n            Auth.login(data.login.token)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n\r\n        setFormState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    };\r\n\r\n    const divStyle = {\r\n        backgroundColor: 'rgb(202, 102, 122)',\r\n        borderRadius: '3px',\r\n        color: 'white',\r\n        textAlign: 'center'\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Log in\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            autoFocus\r\n                            value={formState.username}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={formState.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Log In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"/signup\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {error && (\r\n                            <div className=\"my-3 p-1\" style={divStyle}>\r\n                                {error.message}\r\n                            </div>\r\n                        )}\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{ mt: 8, mb: 4 }} />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default LogIn;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Portfolios from './pages/Portfolio';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Error from './pages/Error';\r\nimport SignUp from './pages/Signup';\r\nimport LogIn from './pages/Login';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql'\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : ''\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  const isLoggedIn = localStorage.getItem('id_token');\r\n  let redirect;\r\n\r\n  if (isLoggedIn === null && window.location.pathname !== '/signup') {\r\n    redirect = <Redirect to='/login'/>\r\n  }\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          {redirect}\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route exact path=\"/login\" component={LogIn} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <Route exact path=\"/me\" component={Dashboard} />\r\n            <Route component={Error} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}